name: pokemon-api-release

on: 
  release: 
    types: [published]

jobs:
  unit_test_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 10
      - name: Install Node Dependencies
        run: yarn install --frozen-lockfile
      - name: Run all Unit Tests
        run: CI=true yarn test
  deploy_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub deployment
      - uses: actions/checkout@v2
      - uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with: 
          token: ${{ github.token }}
          target_url: http://my-app-url.com
          initial_status: in_progress
          environment: production
      - name: Get Tag Name
        id: get_tag_name
        shell: bash
        run: echo "##[set-output name=tag;]$(echo ${GITHUB_REF#refs/tags/} | tr . -)"
      - uses: actions/checkout@v2
      - uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
          APPLICATION_CREDENTIALS: ${{ secrets.GCLOUD_SERVICE_KEY }}
        with:
          args: app deploy app.yaml --no-promote --quiet --version ${{ steps.get_branch_name.outputs.tag }}
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: http://my-app-url.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: http://my-app-url.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}



  

    


  
